/* os_tos.c */
long_u mch_avail_mem __ARGS((int special));
void mch_breakcheck __ARGS((void));
int mch_call_shell __ARGS((char_u *cmd, int options));
int mch_can_exe __ARGS((char_u *name, char_u **path));
int mch_char_avail __ARGS((void));
int mch_chdir __ARGS((char *path));
int mch_check_win __ARGS((int argc, char **argv));
void mch_delay __ARGS((long msec, int ignoreinput));
int mch_dirname __ARGS((char_u *buf, int len));
void mch_early_init __ARGS((void));
void mch_exit __ARGS((int r));
int mch_expandpath __ARGS((garray_T *gap, char_u *pat, int flags));
int mch_FullName __ARGS((char_u *fname, char_u *buf, int len, int force));
void mch_get_host_name __ARGS((char_u *s, int len));
long mch_get_pid __ARGS((void));
int mch_get_shellsize __ARGS((void));
void mch_new_shellsize __ARGS((void));
void mch_set_shellsize __ARGS((void));
int mch_get_user_name __ARGS((char_u *s, int len));
char_u *mch_getenv __ARGS((char_u *name));
long mch_getperm __ARGS((char_u *name));
int mch_setperm __ARGS((char_u *name, long perm));
int mch_has_exp_wildcard __ARGS((char_u *p));
int mch_has_wildcard __ARGS((char_u *p));
void mch_hide __ARGS((char_u *name));
int mch_inchar __ARGS((char_u *buf, int maxlen, long time, int tb_change_cnt));
void mch_init __ARGS((void));
int mch_input_isatty __ARGS((void));
int mch_isdir __ARGS((char_u *name));
int mch_isFullName __ARGS((char_u *fname));
int mch_nodetype __ARGS((char_u *name));
int mch_screenmode __ARGS((char_u *arg));
void mch_settmode __ARGS((int tmode));
void mch_suspend __ARGS((void));
void mch_write __ARGS((char_u *s, int len));
void slash_adjust __ARGS((char_u *p));
int mch_open __ARGS((char *filename, int access, ...));
int mch_stat __ARGS((char *path, struct stat *buff));
#ifdef FEAT_MOUSE
void mch_setmouse __ARGS((int on));
#endif
void vdo_init_bg __ARGS((void));
char_u *vdo_iter_resolutions __ARGS((int idx));
void vdo_palmap __ARGS((char_u *arg));
void vdo_palvim __ARGS((exarg_T *eap));
void vdo_resolution __ARGS((char_u *arg));
void vdo_kbrate __ARGS((char_u *arg));
char_u *vdo_get_bg_default __ARGS((void));
int vdo_remap_colornum __ARGS((int n));
int vdo_get_max_colors __ARGS((void));
/* libcmini extensions */
int access __ARGS((const char *pathname, int mode));
char *ctime __ARGS((const time_t *timep));
char *asctime __ARGS((const struct tm *timep));
int dup __ARGS((int oldfd));
void perror __ARGS((const char *s));
int rmdir __ARGS((const char *path));
int mkdir __ARGS((const char *path, mode_t mode));
